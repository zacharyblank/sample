# Generated by Otto, do not edit!
#
# This is a Vagrantfile that represents a single layer of a multi-layered
# dev environment. Do not modify, boot, or destroy this environment since
# it can corrupt other environments very easily.

Vagrant.configure("2") do |config|
  
  if ENV["OTTO_VAGRANT_LAYER_PATH"]
    config.vm.clone = ENV["OTTO_VAGRANT_LAYER_PATH"]
  else
    config.vm.box = "hashicorp/precise64"
    config.vm.box_check_update = false
    config.vm.provider :parallels do |p, o|
      o.vm.box = "parallels/ubuntu-12.04"
    end
  end
  

  # ScriptPacks
  dir = "/otto/scriptpacks"
  config.vm.provision "shell", inline: "sudo rm -rf #{dir}; sudo mkdir -p #{dir}; sudo chmod 0777 #{dir}"
  
  config.vm.provision "file", source: "/Users/zachary.blank/Projects/php/.otto/compiled/app/scriptpacks/STDLIB.tar.gz", destination: "#{dir}/STDLIB.tar.gz"
  config.vm.provision "shell", inline: "cd #{dir}; sudo mkdir STDLIB; sudo tar xzf STDLIB.tar.gz -C STDLIB"
  
  config.vm.provision "file", source: "/Users/zachary.blank/Projects/php/.otto/compiled/app/scriptpacks/PHP.tar.gz", destination: "#{dir}/PHP.tar.gz"
  config.vm.provision "shell", inline: "cd #{dir}; sudo mkdir PHP; sudo tar xzf PHP.tar.gz -C PHP"
  

  # Use a linked clone if we can
  config.vm.provider "virtualbox" do |v|
    v.linked_clone = true
  end

  if Vagrant.has_plugin?("vagrant-parallels", ">= 1.6.0")
    config.vm.provider "parallels" do |p|
      p.linked_clone = true
    end
  end

  # Disable the default synced folder
  config.vm.synced_folder ".", "/vagrant", disabled: true

  
  # Setup Ruby
  config.vm.provision "shell", inline: $script_app

end


$script_app = <<SCRIPT
#!/bin/bash
set -e

# Setup our scriptpacks
. /otto/scriptpacks/STDLIB/main.sh
. /otto/scriptpacks/PHP/main.sh

# Initialize
otto_init

# Make it so that `vagrant ssh` goes directly to the correct dir
vagrant_default_cd "vagrant" "/vagrant"

# Configuring SSH for faster login
vagrant_config_fast_ssh

# Install PHP
otto_output "Installing PHP Version 5.6 "
oe php_install "5.6"

otto_output "Installing supporting packages..."
oe sudo apt-get install -y \
  bzr git mercurial build-essential \
  curl

otto_output "Installing Composer..."
php_install_composer
SCRIPT

